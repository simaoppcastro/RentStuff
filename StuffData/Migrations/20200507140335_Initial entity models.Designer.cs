// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StuffData;

namespace StuffData.Migrations
{
    [DbContext(typeof(StuffContext))]
    [Migration("20200507140335_Initial entity models")]
    partial class Initialentitymodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StuffData.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RentStuffCardId");

                    b.Property<DateTime>("Since");

                    b.Property<int>("StuffAssetId");

                    b.Property<DateTime>("Until");

                    b.HasKey("Id");

                    b.HasIndex("RentStuffCardId");

                    b.HasIndex("StuffAssetId");

                    b.ToTable("Checkouts");
                });

            modelBuilder.Entity("StuffData.Models.CheckoutHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckedIn");

                    b.Property<DateTime>("CheckedOut");

                    b.Property<int>("RentStuffCardId");

                    b.Property<int>("StuffAssetId");

                    b.HasKey("Id");

                    b.HasIndex("RentStuffCardId");

                    b.HasIndex("StuffAssetId");

                    b.ToTable("CheckoutHistories");
                });

            modelBuilder.Entity("StuffData.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Gender");

                    b.Property<int?>("HomeStuffLocationId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("RentStuffCardId");

                    b.Property<string>("Telephone");

                    b.HasKey("Id");

                    b.HasIndex("HomeStuffLocationId");

                    b.HasIndex("RentStuffCardId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("StuffData.Models.Hold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("HoldPlaced");

                    b.Property<int?>("RentStuffCardId");

                    b.Property<int?>("StuffAssetId");

                    b.HasKey("Id");

                    b.HasIndex("RentStuffCardId");

                    b.HasIndex("StuffAssetId");

                    b.ToTable("Holds");
                });

            modelBuilder.Entity("StuffData.Models.LocalHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CloseTime");

                    b.Property<int>("DayOfWeek");

                    b.Property<int?>("LocationId");

                    b.Property<int>("OpenTime");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocalHours");
                });

            modelBuilder.Entity("StuffData.Models.RentStuffCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<decimal>("Fees");

                    b.HasKey("Id");

                    b.ToTable("RentStuffCards");
                });

            modelBuilder.Entity("StuffData.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("StuffData.Models.StuffAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("LocationId");

                    b.Property<int>("NumberOfItems");

                    b.Property<int>("StatusId");

                    b.Property<string>("stuffName")
                        .IsRequired();

                    b.Property<int>("stuffYear");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("StatusId");

                    b.ToTable("StuffAssets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StuffAsset");
                });

            modelBuilder.Entity("StuffData.Models.StuffLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("OpenDate");

                    b.Property<string>("Telephone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("StuffLocations");
                });

            modelBuilder.Entity("StuffData.Models.Stuff", b =>
                {
                    b.HasBaseType("StuffData.Models.StuffAsset");

                    b.Property<string>("rentStuffNumber")
                        .IsRequired();

                    b.Property<string>("stuffRef")
                        .IsRequired();

                    b.Property<string>("suffBrandModel")
                        .IsRequired();

                    b.ToTable("Stuff");

                    b.HasDiscriminator().HasValue("Stuff");
                });

            modelBuilder.Entity("StuffData.Models.Checkout", b =>
                {
                    b.HasOne("StuffData.Models.RentStuffCard", "RentStuffCard")
                        .WithMany("Checkouts")
                        .HasForeignKey("RentStuffCardId");

                    b.HasOne("StuffData.Models.StuffAsset", "StuffAsset")
                        .WithMany()
                        .HasForeignKey("StuffAssetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StuffData.Models.CheckoutHistory", b =>
                {
                    b.HasOne("StuffData.Models.RentStuffCard", "RentStuffCard")
                        .WithMany()
                        .HasForeignKey("RentStuffCardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StuffData.Models.StuffAsset", "StuffAsset")
                        .WithMany()
                        .HasForeignKey("StuffAssetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StuffData.Models.Client", b =>
                {
                    b.HasOne("StuffData.Models.StuffLocation", "HomeStuffLocation")
                        .WithMany("Clients")
                        .HasForeignKey("HomeStuffLocationId");

                    b.HasOne("StuffData.Models.RentStuffCard", "RentStuffCard")
                        .WithMany()
                        .HasForeignKey("RentStuffCardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StuffData.Models.Hold", b =>
                {
                    b.HasOne("StuffData.Models.RentStuffCard", "RentStuffCard")
                        .WithMany()
                        .HasForeignKey("RentStuffCardId");

                    b.HasOne("StuffData.Models.StuffAsset", "StuffAsset")
                        .WithMany()
                        .HasForeignKey("StuffAssetId");
                });

            modelBuilder.Entity("StuffData.Models.LocalHours", b =>
                {
                    b.HasOne("StuffData.Models.StuffLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("StuffData.Models.StuffAsset", b =>
                {
                    b.HasOne("StuffData.Models.StuffLocation", "Location")
                        .WithMany("LocationAssets")
                        .HasForeignKey("LocationId");

                    b.HasOne("StuffData.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
